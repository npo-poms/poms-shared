//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2012.06.07 at 01:34:11 PM CEST
//


package nl.vpro.domain.media.nebo.webonly.v1_4;

import jakarta.xml.bind.JAXBElement;
import jakarta.xml.bind.annotation.XmlElementDecl;
import jakarta.xml.bind.annotation.XmlRegistry;
import jakarta.xml.datatype.DatatypeConfigurationException;
import jakarta.xml.namespace.QName;

import nl.vpro.domain.media.nebo.shared.StreamType;
import nl.vpro.domain.media.nebo.shared.StreamsType;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the nl.vpro.domain.media.nebo.webonly.v1_4 package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 *
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _NeboXml_QNAME = new QName("", "nebo_xml");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: nl.vpro.domain.media.nebo.webonly.v1_4
     *
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link NeboXmlWebOnly }
     *
     */
    public NeboXmlWebOnly createRootType() throws DatatypeConfigurationException {
        return new NeboXmlWebOnly();
    }

    /**
     * Create an instance of {@link NeboIconType }
     *
     */
    public NeboIconType createNeboIconType() {
        return new NeboIconType();
    }


    public StreamsType createStreamsType() {
        return new StreamsType();
    }

    /**
     * Create an instance of {@link MediaType }
     *
     */
    public MediaType createMediaType() {
        return new MediaType();
    }

    /**
     * Create an instance of {@link ReferentiesType }
     *
     */
    public ReferentiesType createReferentiesType() {
        return new ReferentiesType();
    }

    /**
     * Create an instance of {@link IconType }
     *
     */
    public IconType createIconType() {
        return new IconType();
    }

    /**
     * Create an instance of {@link OmroepenType }
     *
     */
    public OmroepenType createOmroepenType() {
        return new OmroepenType();
    }

    /**
     * Create an instance of {@link ReferentieType }
     *
     */
    public ReferentieType createReferentieType() {
        return new ReferentieType();
    }

    /**
     * Create an instance of {@link CategorieenType }
     *
     */
    public CategorieenType createCategorieenType() {
        return new CategorieenType();
    }

    /**
     * Create an instance of {@link GenresType }
     *
     */
    public GenresType createGenresType() {
        return new GenresType();
    }

    /**
     * Create an instance of {@link WebonlyType }
     *
     */
    public WebonlyType createWebonlyType() {
        return new WebonlyType();
    }

    /**
     * Create an instance of {@link OmroepType }
     *
     */
    public OmroepType createOmroepType() {
        return new OmroepType();
    }

    /**
     * Create an instance of {@link StreamType }
     *
     */
    public StreamType createStreamType() {
        return new StreamType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NeboXmlWebOnly }{@code >}}
     *
     */
    @XmlElementDecl(namespace = "", name = "nebo_xml")
    public JAXBElement<NeboXmlWebOnly> createNeboXml(NeboXmlWebOnly value) {
        return new JAXBElement<>(_NeboXml_QNAME, NeboXmlWebOnly.class, null, value);
    }

}
